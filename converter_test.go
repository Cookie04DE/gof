//Auto generated by gof; DO NOT EDIT
package gof

import (
	"bytes"
	"os"
	"path/filepath"
	"strings"
	"testing"
)

func TestConverter(t *testing.T) {
	entries, err := os.ReadDir("testdata")
	if err != nil {
		t.Fatalf("Error reading testdata folder: %s", err)
	}
	for _, file := range entries {
		path, err := filepath.Abs(filepath.Join("testdata", file.Name()))
		if err != nil {
			t.Fatalf("Error getting absolute path for %s: %s", path, err)
		}
		if ext := filepath.Ext(path); ext == ".gof" {
			f, err := os.Open(path)
			if err != nil {
				t.Fatalf("Error opening file %s: %s", path, err)
			}
			resultBuf := new(bytes.Buffer)
			Convert(f, resultBuf)
			goFilePath := strings.TrimSuffix(path, ext) + ".go"
			expected, err := os.ReadFile(goFilePath)
			if err != nil {
				t.Fatalf("Error opening file %s to read expected bytes: %s", goFilePath, err)
			}
			if !bytes.Equal(resultBuf.Bytes(), expected) {
				t.Errorf("File %s: Expected %q but got %q", path, expected, resultBuf.Bytes())
			}
		}
	}
}
